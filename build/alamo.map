Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
                              build/alamo.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                              build/alamo.o (__do_clear_bss)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(sprintf.o)
                              build/alamo.o (sprintf)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(sprintf.o) (vfprintf)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (strnlen_P)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strnlen.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (strnlen)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(fputc.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (fputc)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (__ultoa_invert)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(sprintf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(sprintf.o) (__epilogue_restores__)

Allocating common symbols
Common symbol       size              file

OUTPUT_BUFFER       0x40              build/alamo.o
config              0x1               build/mirf.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm168.o
LOAD build/alamo.o
LOAD build/mirf.o
LOAD build/swspi.o
LOAD build/usart.o
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xf1e
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm168.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm168.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm168.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_24
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_23
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_11
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_19
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_14
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_18
                0x00000000000000a2                __vector_20
 .text          0x00000000000000a6      0x190 build/alamo.o
                0x00000000000000a6                blink1
                0x00000000000000d2                blink2
                0x00000000000000fe                printSettings
 .text          0x0000000000000236      0x4cc build/mirf.o
                0x0000000000000236                mirf_ld
                0x0000000000000270                mirf_st
                0x00000000000002c0                mirf_ldm
                0x000000000000031c                mirf_stm
                0x000000000000037a                mirf_init
                0x0000000000000484                mirf_ready
                0x00000000000004b2                mirf_read
                0x0000000000000540                mirf_retry_max
                0x000000000000056e                mirf_write
 .text          0x0000000000000702       0x9c build/swspi.o
                0x0000000000000702                spi_transfer
                0x000000000000073c                spi_ntransfer
 .text          0x000000000000079e       0x68 build/usart.o
                0x000000000000079e                USART_Init
                0x00000000000007b4                USART_Transmit
                0x00000000000007c2                serial_write_str
 .text          0x0000000000000806        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000806        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000806        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000806        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(sprintf.o)
 .text          0x0000000000000806        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .text          0x0000000000000806        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .text          0x0000000000000806        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strnlen.o)
 .text          0x0000000000000806        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(fputc.o)
 .text          0x0000000000000806        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .text          0x0000000000000806        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_prologue.o)
 .text          0x0000000000000806        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_epilogue.o)
                0x0000000000000806                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000806      0x164 build/alamo.o
                0x0000000000000806                main
 .text.libgcc.mul
                0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000096a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000000000000096a       0x48 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(sprintf.o)
                0x000000000000096a                sprintf
 .text.avr-libc
                0x00000000000009b2      0x3ba /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                0x00000000000009b2                vfprintf
 .text.avr-libc
                0x0000000000000d6c       0x16 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                0x0000000000000d6c                strnlen_P
 .text.avr-libc
                0x0000000000000d82       0x16 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strnlen.o)
                0x0000000000000d82                strnlen
 .text.avr-libc
                0x0000000000000d98       0x58 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(fputc.o)
                0x0000000000000d98                fputc
 .text.avr-libc
                0x0000000000000df0       0xbc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                0x0000000000000df0                __ultoa_invert
 .text.libgcc.mul
                0x0000000000000eac        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_prologue.o)
 .text.libgcc.div
                0x0000000000000eac        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_prologue.o)
 .text.libgcc   0x0000000000000eac        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_prologue.o)
 .text.libgcc.prologue
                0x0000000000000eac       0x38 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_prologue.o)
                0x0000000000000eac                __prologue_saves__
 .text.libgcc.builtins
                0x0000000000000ee4        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_prologue.o)
 .text.libgcc.fmul
                0x0000000000000ee4        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_prologue.o)
 .text.libgcc.mul
                0x0000000000000ee4        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.div
                0x0000000000000ee4        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_epilogue.o)
 .text.libgcc   0x0000000000000ee4        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.prologue
                0x0000000000000ee4       0x36 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_epilogue.o)
                0x0000000000000ee4                __epilogue_restores__
 .text.libgcc.builtins
                0x0000000000000f1a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.fmul
                0x0000000000000f1a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_epilogue.o)
                0x0000000000000f1a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000f1a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                0x0000000000000f1a                exit
                0x0000000000000f1a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000f1a        0x4 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000f1e                _etext = .

.data           0x0000000000800100       0xf4 load address 0x0000000000000f1e
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm168.o
 .data          0x0000000000800100        0x0 build/alamo.o
 .data          0x0000000000800100        0x0 build/mirf.o
 .data          0x0000000000800100        0x0 build/swspi.o
 .data          0x0000000000800100        0x0 build/usart.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(sprintf.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strnlen.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(fputc.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_prologue.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_epilogue.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800100        0x5 build/mirf.o
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800105       0xef build/alamo.o
 *(.gnu.linkonce.d*)
                0x00000000008001f4                . = ALIGN (0x2)
                0x00000000008001f4                _edata = .
                0x00000000008001f4                PROVIDE (__data_end, .)

.bss            0x00000000008001f4       0x41
                0x00000000008001f4                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm168.o
 .bss           0x00000000008001f4        0x0 build/alamo.o
 .bss           0x00000000008001f4        0x0 build/mirf.o
 .bss           0x00000000008001f4        0x0 build/swspi.o
 .bss           0x00000000008001f4        0x0 build/usart.o
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(sprintf.o)
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strnlen.o)
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(fputc.o)
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_prologue.o)
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_epilogue.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008001f4       0x40 build/alamo.o
                0x00000000008001f4                OUTPUT_BUFFER
 COMMON         0x0000000000800234        0x1 build/mirf.o
                0x0000000000800234                config
                0x0000000000800235                PROVIDE (__bss_end, .)
                0x0000000000000f1e                __data_load_start = LOADADDR (.data)
                0x0000000000001012                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800235        0x0
                0x0000000000800235                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800235                PROVIDE (__noinit_end, .)
                0x0000000000800235                _end = .
                0x0000000000800235                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x3d8c
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm168.o
 .stab          0x00000000000006cc      0x894 build/alamo.o
                                        0x8a0 (size before relaxing)
 .stab          0x0000000000000f60     0x1170 build/mirf.o
                                       0x1350 (size before relaxing)
 .stab          0x00000000000020d0      0x450 build/swspi.o
                                        0x618 (size before relaxing)
 .stab          0x0000000000002520      0x2c4 build/usart.o
                                        0x4bc (size before relaxing)
 .stab          0x00000000000027e4      0x3d8 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(sprintf.o)
                                        0x3e4 (size before relaxing)
 .stab          0x0000000000002bbc      0xa44 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                                        0xc24 (size before relaxing)
 .stab          0x0000000000003600       0x9c /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                                         0xa8 (size before relaxing)
 .stab          0x000000000000369c       0x9c /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strnlen.o)
                                         0xa8 (size before relaxing)
 .stab          0x0000000000003738      0x1d4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(fputc.o)
                                        0x3b4 (size before relaxing)
 .stab          0x000000000000390c      0x480 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                                        0x48c (size before relaxing)

.stabstr        0x0000000000000000     0x155a
 *(.stabstr)
 .stabstr       0x0000000000000000     0x155a /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x22
 *(.comment)
 .comment       0x0000000000000000       0x11 build/alamo.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 build/mirf.o
 .comment       0x0000000000000000       0x12 build/swspi.o
 .comment       0x0000000000000000       0x12 build/usart.o
 .comment       0x0000000000000011       0x11 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(sprintf.o)
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(fputc.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(build/alamo.elf elf32-avr)
LOAD linker stubs
